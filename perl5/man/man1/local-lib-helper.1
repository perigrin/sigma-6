.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.19)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LOCAL-LIB-HELPER 1"
.TH LOCAL-LIB-HELPER 1 "2011-09-10" "perl v5.14.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
local\-lib\-helper \- A commandline utility that builds local\-lib helper scripts
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    local\-lib\-helper
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Although the primary purpose of this distribution is to make it trivial to use
a given local::lib you may, as part of a custom build or deployment system,
need an easy way to programmatically create the helper scripts for either an
activated or precreated local::lib.  This script makes that easy.  If you
are already in a local::lib managed environment this script will detect that
fact and automatically install the helpers into the \f(CW\*(C`bin\*(C'\fR directory of that
local::lib.  If there is not a currently activated local::lib, you can
still install the helpers as long as you've already created a local::lib
in the past (say via the self bootstrap method outlined in the documention,
or when you specified a \f(CW\*(C`\-l\*(C'\fR option with App::cpanminus).  In that case
since we can't auto detect the location of the local::lib you need to use
the \f(CW\*(C`target\*(C'\fR option, which should be the root directory of the local::lib
(which is the directory that contains the \f(CW\*(C`bin\*(C'\fR and \f(CW\*(C`lib\*(C'\fR directories of
the local::lib you previously created).
.SH "OPTIONS"
.IX Header "OPTIONS"
This script has the following options, which can also be veiwed in summary by
typing \f(CW\*(C`local\-lib\-helper \-\-help\*(C'\fR.
.IP "help (\-\-help, \-h)" 4
.IX Item "help (--help, -h)"
A summary of the help options.
.IP "which_perl (\-\-which_perl, \-p)" 4
.IX Item "which_perl (--which_perl, -p)"
This should be the path to the perl binary that the local::lib is built
against. This defaults to the path of the perl binary under which we are
currently running.  You should probably leave this one alone :)
.IP "target (\-\-target, \-t)" 4
.IX Item "target (--target, -t)"
This is the target directory for the local::lib you want to build the helper
script against.  By default it will attempt to detect the currently running
local::lib and use that.  If we can't detect a running local::lib and
this option is undef, we die with a message.
.IP "helper_name (\-\-helper_name, \-n)" 4
.IX Item "helper_name (--helper_name, -n)"
This is the name of the helper utility script.  It defaults to 'localenv'.
.IP "helper_permissions (\-\-helper_permissions, \-p)" 4
.IX Item "helper_permissions (--helper_permissions, -p)"
These are the permissions the the helper utility script is set to.  By default
we set the equivilent of 'chmod 755 [\s-1HELPER\s0 \s-1SCRIPT\s0]'
.PP
App::local::lib::helper, App::local::lib::helper::rationale
.SH "AUTHOR"
.IX Header "AUTHOR"
John Napiorkowski \f(CW\*(C` <<jjnapiork@cpan.org\*(C'\fR> >
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2010, John Napiorkowski
.PP
This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 112:" 4
.IX Item "Around line 112:"
Unknown directive: =head
